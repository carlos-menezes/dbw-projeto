openapi: 3.0.0
info:
  description: "Specification for the dbw-projeto API"
  version: 0.1.0
  title: dbw-projeto
  contact:
    email: talk@carlos-menezes.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: user
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Create user
      description: ""
      operationId: registerUser
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        "200":
          description: OK
        "405":
          description: Invalid input 
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
  /user/logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: OK
servers:
  - url: https://localhost:8080/api/
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
      description: List of user object
      required: true
    User:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
      description: User object that needs to be added to the database
      required: true
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string