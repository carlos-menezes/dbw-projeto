// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  email          String          @unique
  firstName      String
  lastName       String
  password       String
  tickets        Ticket[]
  ticketMessages TicketMessage[]
}

model Category {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  tickets  Ticket[]
  Question Question[]
  Room     Room[]
}

model Question {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
  pinned      Boolean?  @default(false)
}

model Ticket {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  status      TicketStatus @default(AVAILABLE)
  user        User?        @relation(fields: [userId], references: [id])
  userId      String?      @db.ObjectId
  email       String
  createdAt   DateTime     @default(now())
  commentCode String?

  messages TicketMessage[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId
  fileId     String?  @db.ObjectId
}

model TicketMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  message   String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  Ticket    Ticket?  @relation(fields: [ticketId], references: [id])
  ticketId  String?  @db.ObjectId
  isReply   Boolean  @default(false)
}

enum TicketStatus {
  OPEN
  CLOSED
  AVAILABLE
}

model Room {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  title      String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId
}
